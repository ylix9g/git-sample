Git - отдельная программа предоставляющая функции полноценной системы контроля
версий используя которую можно отслеживать все изменения происходящие в
контексте репозитория, создавать множество паралельно существующих веток и так
далее. Репозиторием называется базовый каталог относительно которого будут
отслеживаться вносимые изменения и храниться вся их история (чаще всего
репозиторием является основная папка проекта). История изменения в системе
контроля версий Git представляет собой список зафиксированных изменений
называемых commit, каждый commit состоит из внесённых изменени, имени и email
автора изменений, дата и время внесения изменений. Ветка в Git представляет
собой отдельное изолированное пространство в контексте репозитория, изменения
вносимые в одну ветку не оказывают влияния на другую ветку, по умолчанию при
первичной иниализации репозитория создаётся базовая ветка (чаще всего под
названием master либо main). Git представляет собой программу с консольным
интерфейсом взаимодействия (все команды вводятся в соотвествующую консоль),
есть графические оболочки облегчающие работу с Git, к такой оболочке относится
среда разработки IDEA.

`git init` - инициализирует новый репозиторий в том же каталоге в контексте
которого выполняется.

`git status` - выводит информацию о текущем состоянии репозитория: на какой
ветке находится репозиторий, по каким файлам отслеживаются изменения, а по
каким нет и так далее.

`git add <file...>` - добавляет файла для будущей фиксации в истории изменений,
важно отметить что файла будут сохранены в состоянии в котором они находились
на момент выполнения команды.

`git config user.name` - имя автора вносимых изменений.

`git config user.email` - email автора вносимых изменений.

`git commit -m <message>` - фиксируют в истории добавленные ранее изменения при
помощи команды git add. При выполнении данной команду обязательным требованием
является сообщение описывающее сохраняемую группу изменений.

В репозитории необходимо хранить исходный код и ресурсы которые к нему
относятся, при этом в проекте так же могут фигурировать файлы локальной
конфигурации среды разработки, результат компиляции и так далее, такие ресурсы
не имеет смысла сохранять в репозитории из-за их локального востребования. К
файлам локальной конфигурации среды разработки IDEA относятся папка .idea и её
сожержимое и так же файлы с расширением *.iml, в Visual Studio Code такой
папкой будет .vscode, у каждый среды есть свои локальные конфиги которые не
стоит добавлять в репозиторий. Для игнорирования перечисленных ресурсов в
контексте репозитория можно воспользоваться файлом под названием `.gitignore`,
это обычный текстовый файл в котором записываются файлы и папки которые будут
проигнорированы при выполнении команд git status и git add. Обычно файл
`.gitignore` создаётся в корневом каталоге репозитория, но может так же
находится подпапках.














